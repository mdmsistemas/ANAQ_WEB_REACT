{"version":3,"sources":["components/Log/LogView.js","context/AutoRefresh.js","reportWebVitals.js","components/Messages/LoadPageError.js","components/Messages/SentCmdError.js","components/Messages/SentCmdSucess.js","components/Analyse/AnalyseView.js","components/DAQ/DaqView.js","components/Navbar/Navbar.js","components/Analyse/Alarms.js","components/Analyse/MonitoredPoints.js","components/Analyse/SignalPlot.js","components/Analyse/Tests.js","components/Error/ErrorView.js","components/Statistics/StatisticsView.js","components/Version/VersionView.js","index.js"],"names":["LogView","useState","log","setLog","useAutoRefresh","refresh","setSpin","loadLog","a","axios","get","res","JSON","parse","data","logType","includes","useEffect","timeoutView","setTimeout","timeOutSpin","clearTimeout","className","Log","map","logi","idx","Buffer","from","toString","RefreshContext","createContext","RefreshProvider","children","setRefresh","spin","timeOutId","Provider","value","context","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LoadPageError","props","role","style","marginRight","height","type","readOnly","error","code","disabled","source","SentCmdError","show","handle","display","onClick","SentCmdSucess","AnalyseView","analyses","setAnalyses","keyState","setKeyState","alertState","setAlertState","errorState","setErrorState","url","useRouteMatch","loadAnalyses","console","styleBadge","width","fontSize","fontWeight","padding","sendCmd","cmd","equip","items","nome","body","status","EstadosAnalise","erros","Component","item","estado","datahoraUltimaAnalise","estadoUltimaAnalise","scope","pontosOp","forEach","pto","nomePtoOp","val","ultimoValor","pointerEvents","toFixed","tempoRestante","numAlarmes","to","paddingRight","cursor","id","tabIndex","paddingLeft","DaqView","daq","setDaq","loadDaq","dateFormat","date","ndate","replace","Date","toLocaleString","EstadosAquisicao","nomeUAD","driver","nbloco","datahora","Navbar","activeTab","setActiveTab","window","location","href","tab","split","useHistory","listen","action","tabHist","pathname","slice","paddingBottom","src","alt","marginBottom","borderRadius","backgroundColor","color","borderBottom","title","Alarms","useParams","alarms","setAlarms","loadAlarms","pad2","number","borderStyle","borderWidth","ldate","now","getUTCDate","getUTCMonth","getUTCFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","LocalDate","Alarmes","alarm","alarmados","almds","idj","nomePtoMon","nomeTeste","valorAlarmado","valorAlarme","sentido","nomeAlarme","IDPtoMon","MonitoredPoints","monPoints","setMonPoints","loadMonPoints","Sinais","pontosMonitorados","point","valido","valid","name","textDecoration","valor","timestamp","unidade","canal","SignalPlot","urlArr","Plot","createPlotlyComponent","Plotly","signal","setSignal","loadSignal","x","arrX","ele","i","sinal","length","push","dt","getArrX","y","mode","marker","layout","font","size","xaxis","linecolor","linewidth","mirror","yaxis","Tests","tests","setTests","loadTests","Testes","test","ultimosResultadosTestes","ultm","idk","idTeste","ErrorView","setError","loadError","err","codigo","horaInicio","horaUltima","descricao","stack","StatisticsView","stat","setStat","loadStat","inicio","ultimoReinicio","datei","datef","ndatei","ndatef","ms","mil_num","parseInt","days","Math","floor","hours","minutes","seconds","toDdHhMnSs","abs","getTime","operationTime","memoria","temposAnaliseEquipamentos","tUltimoCiclo","temposBlocosPreProcess","temposBlocosPosProcess","temposBlocosUADs","uad","PacotesEquipamento","pac","Equipamento","NumPacotesAnalise","VersionView","vers","setVers","loadVers","FileVersion","CompanyName","LegalCopyright","ReactDOM","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.301c5254.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst LogView = ()=>{ \r\n\r\n    const [log, setLog] = useState({'Log':[]});\r\n    const {refresh, setSpin} = useAutoRefresh();\r\n\r\n    const loadLog = async () =>{         \r\n        const res = await axios.get(`JSON/WS_LOG/600`);\r\n        if(typeof(res)=='string')\r\n            res=JSON.parse(res);\r\n        setLog(res.data);\r\n    } \r\n      \r\n    useEffect(() => {\r\n        loadLog()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(refresh===true) {\r\n            const timeoutView = setTimeout(() => {\r\n                loadLog()\r\n                //console.log('Updating Log')                  \r\n                const timeOutSpin = setTimeout(() => {setSpin(false)}, 5000);\r\n                setSpin(true); \r\n                return () => clearTimeout(timeOutSpin);   \r\n            }, 5000);\r\n            return () => clearTimeout(timeoutView);   \r\n        } else if(refresh===false){\r\n            setSpin(false)\r\n        }     \r\n    }, [log, refresh, setSpin])   \r\n\r\n    function logType(log) {\r\n        if(log.includes('ERRO ADICIONADO')){\r\n            return 'alert alert-danger'\r\n        }else if(log.includes('ERRO EXPIRADO')){\r\n            return 'alert alert-info'\r\n        }else if(log.includes('ANAQ iniciado com sucesso')){\r\n            return 'alert alert-success'\r\n        }else if(log.includes('descarregada com sucesso')){\r\n            return 'alert alert-success'\r\n        }else if(log.includes('Mudou do estado')){\r\n            return 'alert alert-warning'\r\n        }else if(log.includes('ANAQ finalizado')){\r\n            return 'alert alert-warning'\r\n        }else if(log.includes('COMANDO DE')){\r\n            return 'alert alert-warning'\r\n        }else if(log.includes('Alerta Coletado')){\r\n            return 'alert alert-warning'\r\n        }else if(log.includes('RECEBIDA')){\r\n            return 'alert alert-warning'\r\n        }else {\r\n            return 'bg-light'\r\n        }      \r\n    }   \r\n   \r\n    return( \r\n        <div className=\"row justify-content-center\">     \r\n            <div className=\"col\">            \r\n                {\r\n                    log.Log.map((logi, idx) => {\r\n                        return  <div key={idx} className={`${logType(Buffer.from(logi,'base64').toString('ascii'))} border-top justify-content-start p-0 mb-1`}> \r\n                                    {Buffer.from(logi,'base64').toString('ascii')}     \r\n                                </div>\r\n                })}                                          \r\n            \r\n            </div> \r\n        </div>    \r\n    ) \r\n}\r\n\r\nexport default LogView","import React, {createContext, useState, useContext, useEffect} from \"react\";\r\n\r\nconst RefreshContext = createContext();\r\n\r\nexport default function RefreshProvider({ children }){\r\n    \r\n    const [refresh, setRefresh] = useState(true);\r\n    const [spin, setSpin] = useState(true);\r\n\r\n    //console.log('refresh=', refresh) \r\n   \r\n    useEffect(() => {      \r\n            const timeOutId = setTimeout(() => setSpin(false), 2000);\r\n           // console.log('init autoRefresh')\r\n            return () => clearTimeout(timeOutId);        \r\n    }, []);  \r\n\r\n    return(\r\n        <RefreshContext.Provider value={{ refresh, setRefresh, spin, setSpin }}>\r\n            {children}\r\n        </RefreshContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useAutoRefresh(){\r\n    const context = useContext(RefreshContext);\r\n    const { refresh, setRefresh, spin, setSpin } = context;\r\n    return {refresh, setRefresh, spin, setSpin}\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst LoadPageError = props =>{ \r\n   \r\n    return( \r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            <h4 className=\"alert-heading mb-3\"> <i className=\"fas fa-exclamation-triangle\" style={{marginRight:'6px'}}></i>\r\n                Erro carregando a página!\r\n            </h4>\r\n            <div className=\"row\" style={{height:'25px'}}>\r\n                <label className=\"col-1 col-form-label fw-bold\">Código:</label>\r\n                <div className=\"col-10\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value={props.error.code} disabled></input>\r\n                </div>\r\n            </div>   \r\n            <div className=\"row\" style={{height:'25px'}}>\r\n                <label className=\"col-1 col-form-label fw-bold\" >Fonte:</label>\r\n                <div className=\"col-10\">\r\n                    <input type=\"text\" readOnly className=\"form-control-plaintext\" value={props.error.source} disabled></input>\r\n                </div>\r\n            </div>                \r\n       </div>\r\n    ) \r\n}\r\n\r\nexport default LoadPageError","import React from 'react'\r\n\r\nconst SentCmdError = ({error, show, handle})  =>{ \r\n   \r\n    return( \r\n        <div >\r\n            <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" style={{display:(show?'block':'none')}}>\r\n                <h5 className=\"alert-heading mb-1\"> <i className=\"fas fa-exclamation-triangle\" style={{marginRight:'6px'}}></i>\r\n                    Erro enviando comando!\r\n                </h5>                       \r\n                <div className=\"row\" style={{height:'25px'}}>\r\n                    <label className=\"col-1 col-form-label fw-bold\">Código:</label>\r\n                    <div className=\"col-10\">\r\n                        <input type=\"text\" readOnly className=\"form-control-plaintext\" value={error.code} disabled></input>\r\n                    </div>\r\n                </div>   \r\n                <div className=\"row\" style={{height:'25px'}}>\r\n                    <label className=\"col-1 col-form-label fw-bold\" >Fonte:</label>\r\n                    <div className=\"col-10\">\r\n                        <input type=\"text\" readOnly className=\"form-control-plaintext\" value={error.source} disabled></input>\r\n                    </div>\r\n                </div> \r\n                <button type=\"button\" className=\"btn-close\" onClick={() => handle()} aria-label=\"Close\"></button>\r\n            </div>\r\n        </div> \r\n    ) \r\n}\r\n\r\nexport default SentCmdError","import React from 'react'\r\n\r\nconst SentCmdSucess = ({show, handle})  =>{ \r\n   \r\n    return( \r\n        <div> \r\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\" style={{display:(show?'block':'none')}}>\r\n            <strong><i className=\"fas fa-check-circle\" style={{marginRight:'6px'}}></i>\r\n                Comando enviado com sucesso\r\n            </strong> \r\n            <button type=\"button\" className=\"btn-close\" onClick={() => handle()} aria-label=\"Close\"></button>\r\n            </div>\r\n        </div> \r\n    ) \r\n}\r\n\r\nexport default SentCmdSucess","import React, {useEffect, useState} from 'react'\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport LoadPageError from '../Messages/LoadPageError'\r\nimport SentCmdError from '../Messages/SentCmdError';\r\nimport SentCmdSucess from '../Messages/SentCmdSucess';\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst AnalyseView = ()=>{ \r\n      \r\n   const [analyses, setAnalyses] = useState({\"EstadosAnalise\":[], \"error\":{\"code\":\"\", \"source\":\"\", \"status\":\"\"}});   \r\n   const [keyState, setKeyState] = useState();\r\n   const [alertState, setAlertState] = useState(false);\r\n   const [errorState, setErrorState] = useState({\"code\":\"\" ,\"source\":\"\",\"status\": false},);  \r\n   const {refresh, setSpin} = useAutoRefresh() ;\r\n\r\n   const { url } = useRouteMatch();  \r\n\r\n   const loadAnalyses = async () =>{    \r\n       const res = await axios.get('JSON/WS_EAN');  \r\n       setAnalyses(res.data);        \r\n    }   \r\n   \r\n    useEffect(() => {      \r\n        loadAnalyses()   \r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        if(refresh===true) {\r\n            const timeoutView = setTimeout(() => {\r\n                loadAnalyses();\r\n                console.log('Updating Analyses');\r\n                const timeOutSpin = setTimeout(() => {setSpin(false)}, 5000);\r\n                setSpin(true); \r\n                return () => clearTimeout(timeOutSpin);   \r\n            }, 5000);\r\n            return () => clearTimeout(timeoutView);   \r\n        } else if(refresh===false){\r\n            setSpin(false)\r\n        }     \r\n     }, [analyses, refresh, setSpin])      \r\n     \r\n\r\n    const isError = (val)=>{ \r\n        if(val === -99999999999){\r\n            return <button type=\"button\" className=\"btn btn-sm btn-danger pt-0 pb-0\"  style={{fontSize:'12px', pointerEvents: 'none'}}>ERRO</button>\r\n        }else{\r\n            return val.toFixed(4);\r\n        }\r\n    }\r\n\r\n    const styleBadge = { \r\n        width:'259px', \r\n        fontSize: '1.0em', \r\n        fontWeight: '600',\r\n        padding:'4.7px'         \r\n    } \r\n\r\n    const sendCmd = async(cmd) =>{   \r\n              \r\n        let equip = items[keyState].nome;\r\n        let res = await axios.get(`JSON/${cmd}/${equip}`) \r\n        console.log(`resAnalise_cmd=`, JSON.parse(res.data))\r\n        res = JSON.parse(res.data.body);\r\n       /* const res = {\r\n            \"error\":\r\n            {\r\n                \"code\": 140,\r\n                \"source\": \"error found in ANAQ..\",\r\n                \"status\": false\r\n            },\r\n            \"data\":\r\n            {\r\n            \r\n            }   \r\n        }  */\r\n        //setRefresh(!refresh);\r\n        setAlertState(true); \r\n        setErrorState({ code: res.error.code,\r\n                        source: res.error.source,\r\n                        status: res.error.status,})          \r\n    } \r\n\r\n    const handleAlertUpdate = () => {      \r\n        setAlertState(false);\r\n    }\r\n\r\n    const items = analyses.EstadosAnalise; \r\n    const erros = analyses.error; \r\n\r\n    const Component = errorState.status ? SentCmdError : SentCmdSucess;\r\n  \r\n    return (\r\n        <div>       \r\n          {erros.status === true\r\n            ? <LoadPageError error = {analyses.error} />              \r\n            : <div>\r\n                {alertState === true \r\n                    ? <Component error={errorState} show ={alertState} handle = {handleAlertUpdate}/>  \r\n                    : null  \r\n                }  \r\n                {items.map((item, idx) =>              \r\n                  <div className=\"col d-flex justify-content-center mb-2\" key={idx}>           \r\n                    <div className=\"card text-dark align-item-center mb-3 \" style={{width: '76rem'}} >\r\n                        <div className=\"card-header\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <h6 className=\"card-title fw-bold\">{item.nome}</h6>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <h6 className=\"card-title\">Estado: {item.estado}</h6>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <h6 className=\"card-title\">Última Análise: {item.datahoraUltimaAnalise}</h6>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <h6 className=\"card-title text-center\">{item.estadoUltimaAnalise}</h6>\r\n                                </div>\r\n                            </div> \r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-11\">\r\n                                    <table className=\"table table-sm table-striped table-bordered table-light mt-3\">\r\n                                        <thead>\r\n                                            <tr>                    \r\n                                            <th scope=\"col\" >Ponto de Operação</th>\r\n                                            <th scope=\"col\" className=\"text-center\">Valor</th>\r\n                                            <th scope=\"col\" className=\"text-center\">Tempo p/ Estab.</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>                                            \r\n                                            {//item.pontosOp.map((pto, idx) => {\r\n                                              item.pontosOp.forEach(function(pto, idx) {  \r\n                                                if(pto.nomePtoOp){\r\n                                                    return  <tr key={item.nome+'_'+idx}>                       \r\n                                                                <td>{pto.nomePtoOp}</td>\r\n                                                                <td className=\"text-center\">{isError(pto.ultimoValor)}</td>\r\n                                                                <td className=\"text-center\">{pto.tempoRestante} minutos </td>\r\n                                                            </tr>\r\n                                                }\r\n                                            })}                                          \r\n                                        </tbody>                    \r\n                                    </table>  \r\n                                </div> \r\n                            </div>   \r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\" >\r\n                                    {item.numAlarmes > 0\r\n                                    ? <Link className=\"btn btn-sm rounded-pill btn-danger me-md-2\" to ={`${url}/alarms/${item.nome}`} style={styleBadge}><i className=\"fas fa-bell fa-fw\"></i>Alarmes <span className=\"badge bg-light text-danger\">{item.numAlarmes}</span></Link>\r\n                                    : <button className=\"btn btn-sm rounded-pill btn-success me-md-2\" disabled style={styleBadge}><i className=\"fas fa-bell-slash\" style={{paddingRight:'2px'}}></i>Sem Alarmes</button>\r\n                                    }\r\n                                    <Link className=\"btn btn-sm rounded-pill btn-primary me-md-2\" to ={`${url}/points/${item.nome}`} style={styleBadge}><i className=\"fas fa-map-marker-alt fa-fw\"></i>Pontos Monitorados</Link>\r\n                                    <Link className=\"btn btn-sm rounded-pill btn-primary me-md-2\" to ={`${url}/tests/${item.nome}`} style={styleBadge}><i className=\"fas fa-clipboard\" style={{paddingRight:'4px'}}></i>Testes</Link>\r\n                                    <div className=\"btn-group\" >\r\n                                        <button type=\"button\" className=\"btn btn-sm btn-primary rounded-pill rounded-end\" style={styleBadge}>\r\n                                            <i className=\"fas fa-bars fa-fw\"></i>Comandos\r\n                                        </button>\r\n                                        <button type=\"button\" className=\"btn btn-sm btn-primary dropdown-toggle dropdown-toggle-split rounded-pill rounded-start\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            <span className=\"visually-hidden\">Toggle Dropdown</span>\r\n                                        </button>\r\n                                        <ul className=\"dropdown-menu dropdown-menu-end\" >\r\n                                            <li><button  className=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#recordModal\"  onClick={() => setKeyState(idx)} style={{cursor: \"pointer\"}}>Gravar Registro</button ></li>\r\n                                            <li><button className=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#enforceModal\" onClick={() => setKeyState(idx)} style={{cursor: \"pointer\"}}>Forçar Estabilidade</button ></li>\r\n                                            <li><button  className=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#restAlarmModal\" onClick={() => setKeyState(idx)} style={{cursor: \"pointer\"}}>Reiniciar Alarmes</button ></li>     \r\n                                        </ul>\r\n                                    </div>  \r\n                                </div>\r\n                            </div>              \r\n                        </div>\r\n                    </div>                                 \r\n        \r\n                    {/* Modal Gravar Registro */}\r\n                    <div className=\"modal fade\" id=\"recordModal\" tabIndex=\"-1\" aria-labelledby=\"recordModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"recordModalLabel\">Gravar novo registro<i className=\"fas fa-share-square\" style={{paddingLeft:'7px'}}></i></h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                Deseja gravar um novo registro?\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={() => sendCmd('WS_NOVOREG')}>OK</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    {/* Modal Forcar Estabilidade */}\r\n                    <div className=\"modal fade\" id=\"enforceModal\" tabIndex=\"-1\" aria-labelledby=\"enforceModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"enforceModalLabel\">Forçar estabilidade do equipamento<i className=\"fas fa-hammer\" style={{paddingLeft:'7px'}}></i></h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div> Deseja forçar o estado do equipamento para estável? </div>\r\n                                <div> O contador de tempo para estabilidade será zerado. </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={() => sendCmd('WS_RST_AGUARDA')}>OK</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    {/* Modal Reiniciar Alarmados */}\r\n                    <div className=\"modal fade\" id=\"restAlarmModal\" tabIndex=\"-1\" aria-labelledby=\"restAlarmModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"restAlarmModalLabel\">Reinciar os Alarmes do equipamento<i className=\"fas fa-retweet\" style={{paddingLeft:'7px'}}></i></h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div> Deseja forçar o reinicio dos alarmes do equipamento? </div>\r\n                                <div>Todos os alarmes serão zerados. </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={() => sendCmd('WS_RST_ALARMADOS')}>OK</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>        \r\n                  </div> \r\n                )}\r\n              </div> \r\n          }  \r\n        </div>     \r\n    )\r\n}\r\n\r\nexport default AnalyseView","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport LoadPageError from '../Messages/LoadPageError'\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst DaqView = ()=>{ \r\n   \r\n    const [daq, setDaq] = useState({'EstadosAquisicao':[], 'error':{'code':'', 'source':'', 'status':''}});\r\n    const {refresh, setSpin} = useAutoRefresh();\r\n\r\n    const loadDaq = async () =>{          \r\n        const res = await axios.get('JSON/WS_EAQ')\r\n        setDaq(res.data);\r\n    } \r\n      \r\n    useEffect(() => {\r\n        loadDaq()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(refresh===true) {\r\n            const timeoutView = setTimeout(() => {\r\n                loadDaq()\r\n                console.log('Updating Daq')                  \r\n                const timeOutSpin = setTimeout(() => {setSpin(false)}, 5000);\r\n                setSpin(true); \r\n                return () => clearTimeout(timeOutSpin);   \r\n            }, 5000);\r\n            return () => clearTimeout(timeoutView);   \r\n        } else if(refresh===false){\r\n            setSpin(false)\r\n        }     \r\n     }, [daq, refresh, setSpin])   \r\n\r\n\r\n    function dateFormat(date) {\r\n        let ndate = date.replace(',', '.')\r\n        let d = new Date(ndate)\r\n        //console.log('date=', ndate , d)\r\n        return d.toLocaleString();\r\n    }\r\n   \r\n    return( \r\n        <div> \r\n        {\r\n            daq?\r\n            (\r\n                daq.error.status === true   \r\n                ? <LoadPageError error = {daq.error} />            \r\n                : <div className=\"row justify-content-center\">\r\n                    <div className=\"col-16\">\r\n                        <table className=\"table table-striped table-sm table-bordered table-light mt-2\">\r\n                            <thead>\r\n                                <tr>                    \r\n                                    <th scope=\"col\">Nome</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Driver</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Num. Bloco</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Últmia Adquição</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Estado</th>                          \r\n                                </tr>\r\n                            </thead>\r\n                                <tbody>\r\n                                    {daq.EstadosAquisicao.map((estado, idx) => {\r\n                                        return  <tr key={idx} className={`table table-striped table-sm table-bordered table-light mt-3 \r\n                                                                        ${(estado.error.status)?'text-danger':'text-success'}`}>  \r\n                                                    <td>{estado.nomeUAD}</td>\r\n                                                    <td className=\"text-center\">{estado.driver}</td>\r\n                                                    <td className=\"text-center\">{estado.nbloco}</td>\r\n                                                    <td className=\"text-center\">{dateFormat(estado.datahora)}</td>\r\n                                                    <td className=\"text-center\">{(estado.error.status)?'':'OK'}</td>     \r\n                                                </tr>\r\n                                    })}                                          \r\n                                </tbody>                    \r\n                        </table>  \r\n                    </div> \r\n                </div>\r\n              ):(\r\n                  <span>Loading....</span>\r\n              )\r\n        } \r\n        </div>   \r\n    ) \r\n}\r\n\r\nexport default DaqView","import React, {useEffect, useState} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SentCmdError from '../Messages/SentCmdError';\r\nimport SentCmdSucess from '../Messages/SentCmdSucess';\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst Navbar = () => {\r\n\r\n    const [activeTab, setActiveTab] = useState(''); \r\n    const [alertState, setAlertState] = useState(false);\r\n    const [errorState, setErrorState] = useState({code:'',source:'',status:false},); \r\n    const {refresh, setRefresh, spin} = useAutoRefresh() ;\r\n  \r\n    const styleTab = () =>{\r\n        return {\r\n                    borderRadius: '3px 3px 0 0',\r\n                    backgroundColor: 'white',\r\n                    color: 'black',\r\n                    borderBottom: 'white'\r\n               }\r\n    }  \r\n\r\n    const sendCmd = async(cmd) =>{   \r\n        let res = await axios.get(`JSON/${cmd}`)\r\n        console.log(`res_cmd=`, res.data)\r\n        //res = JSON.parse(res.data);\r\n        /*const res = {\r\n            \"error\":\r\n            {\r\n                \"code\": 0,\r\n                \"source\": \"\",\r\n                \"status\": false\r\n            },\r\n            \"data\":\r\n            {\r\n            \r\n            }   \r\n        }*/\r\n            \r\n        setAlertState(true);      \r\n        setErrorState({ code: res.error.code,\r\n                        source: res.error.source,\r\n                        status: res.error.status,})          \r\n    } \r\n\r\n    const handleAlertUpdate = () => {      \r\n        setAlertState(false);\r\n    }\r\n\r\n    const Component = errorState.status ? SentCmdError : SentCmdSucess;\r\n\r\n    useEffect(() => {\r\n        let url = window.location.href;\r\n        let tab = url.split('/')[5];\r\n        console.log('tab url=',url, tab)\r\n        if (!tab) {tab = 'analyse'}     \r\n        setActiveTab(tab);  \r\n    }, [])\r\n\r\n    useHistory().listen((location, action) => {    \r\n        let tabHist = location.pathname.slice(1)\r\n        if(tabHist.includes('/')){\r\n            tabHist = tabHist.split('/')[0];            \r\n        } \r\n        setActiveTab(tabHist);    \r\n        console.log(action, tabHist)\r\n    }); \r\n\r\n    return (\r\n      <div>  \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\" >\r\n            <div className=\"container\" style={{paddingBottom:\"-1px\"}}>               \r\n                <img src='logoMDM.png' alt=\"logo\" width=\"6%\" height=\"6%\" className=\"d-inline-block align-text-top\"/>\r\n                      \r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\" style={{paddingLeft:\"20px\", marginBottom:'-8px'}}>\r\n                    <ul className=\"navbar-nav me-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className={activeTab==='analyses'?'active nav-link':'nav-link'} style={activeTab==='analyses'?styleTab():{}} onClick={()=>setActiveTab('analyses')} to=\"/\">\r\n                                <i className=\"fas fa-search-location fa-fw\"></i>Análise\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className={activeTab==='daq'?'active nav-link':'nav-link'} style={activeTab==='daq'?styleTab():{}}  onClick={() => {setActiveTab('daq')}} to=\"/daq\">\r\n                                <i className=\"fas fa-hdd\" style={{paddingRight:'2px'}}></i>Aquisição\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className={activeTab==='log'?'active nav-link':'nav-link'} style={activeTab==='log'?styleTab():{}} onClick={() => {setActiveTab('log')}} to=\"/log\">\r\n                                <i className=\"far fa-list-alt fa-fw\"></i>Log\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className={activeTab==='error'?'active nav-link':'nav-link'} style={activeTab==='error'?styleTab():{}} onClick={() => {setActiveTab('error')}} to=\"/error\">\r\n                                <i className=\"fas fa-exclamation-triangle\" style={{paddingRight:'2px'}}></i>Erros\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className={activeTab==='statistics'?'active nav-link':'nav-link'} style={activeTab==='statistics'?styleTab():{}} onClick={() => {setActiveTab('statistics')}} to=\"/statistics\">\r\n                                <i className=\"fas fa-chart-bar fa-fw\"></i>Estatísticas\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <div className=\"nav-link  dropdown-toggle\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                <i className=\"fas fa-bars\"></i>\r\n                            </div>\r\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                <li><button className=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#restartModal\" style={{cursor: \"pointer\"}}>Reiniciar</button></li>\r\n                                <li><button className=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#stopModal\" style={{cursor: \"pointer\"}}>Parar</button></li>\r\n                                <li><button className=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#startModal\" style={{cursor: \"pointer\"}}>Iniciar</button></li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <div className=\"nav-link\"  title={refresh?'Atualização Autómatica':'Ativar Auto-atualização'}  onClick={() => setRefresh(!refresh)} style={{cursor: \"pointer\", color: refresh?'#81e386':'#EF9A9A'}}> \r\n                            <i className={refresh?`fas fa-spinner fa-lg ${spin?'fa-pulse':''}`:'fas fa-circle-notch fa-lg'} ></i>\r\n                        </div>            \r\n                        <Link className=\"nav-link\"  title ='Sobre' to=\"/version\" onClick={() => setActiveTab('')} style={{cursor: \"pointer\"}}> <i className=\"fas fa-info-circle\"></i></Link>  \r\n                    </ul>                       \r\n                </div>\r\n            </div>          \r\n        </nav>\r\n               \r\n        {alertState === true \r\n            ? <Component error={errorState} show ={alertState} handle = {handleAlertUpdate}/>           \r\n            : null  \r\n        } \r\n\r\n        {/* Modal Reiniciar */}\r\n        <div className=\"modal fade\" id=\"restartModal\" tabIndex=\"-1\" aria-labelledby=\"restartModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"restartModalLabel\">Reiniciar ANAQ<i className=\"fas fa-history\" style={{paddingLeft:'7px'}}></i></h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    Deseja reiniciar o ANAQ?\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={() => sendCmd('WS_RST')}>OK</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/* Modal Parar */}\r\n        <div className=\"modal fade\" id=\"stopModal\" tabIndex=\"-1\" aria-labelledby=\"stopModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"stopModalLabel\">Parar ANAQ <i className=\"far fa-stop-circle fa-fw\"></i></h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    Deseja parar o ANAQ?\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={() => sendCmd('WS_PARAR')}>OK</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/* Modal Iniciar */}\r\n        <div className=\"modal fade\" id=\"startModal\" tabIndex=\"-1\" aria-labelledby=\"startModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"startModalLabel\">Iniciar ANAQ <i className=\"far fa-play-circle fa-fw\"></i></h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    Deseja iniciar o ANAQ?\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={() => sendCmd('WS_INICIAR')}>OK</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>  \r\n    )\r\n}\r\n\r\nexport default Navbar","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadPageError from '../Messages/LoadPageError'\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst Alarms = ()=>{ \r\n    \r\n    const { nome } = useParams();\r\n    const [alarms, setAlarms] = useState({'Alarmes':[], 'error':{'code':'', 'source':'', 'status':''}});\r\n    const {refresh, setSpin} = useAutoRefresh() ;\r\n\r\n    const loadAlarms = async () =>{   \r\n        const res = await axios.get(`JSON/WS_ALARMES/${nome}`)\r\n        //console.log('res=', JSON.parse(res.data.body)); \r\n        setAlarms(res.data);\r\n    } \r\n      \r\n    useEffect(() => {\r\n        loadAlarms()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(refresh===true) {\r\n            const timeoutView = setTimeout(() => {\r\n                loadAlarms()\r\n                console.log('Updating Analyses')                  \r\n                const timeOutSpin = setTimeout(() => {setSpin(false)}, 2000);\r\n                setSpin(true); \r\n                return () => clearTimeout(timeOutSpin);   \r\n            }, 5000);\r\n            return () => clearTimeout(timeoutView);   \r\n        } else if(refresh===false){\r\n            setSpin(false)\r\n        }     \r\n     }, [alarms, refresh, setSpin])  \r\n\r\n\r\n    function pad2(number) {\r\n        return (number < 10 ? '0' : '') + number;\r\n    }\r\n\r\n    const LocalDate= () => {\r\n        let ldate = new Date(Date.now());    \r\n      \r\n        return pad2(ldate.getUTCDate()) + '/' + pad2(ldate.getUTCMonth() + 1) + '/' + pad2(ldate.getUTCFullYear()) + ' ' + \r\n               pad2(ldate.getUTCHours() - 3) + ':' + pad2(ldate.getUTCMinutes()) + ':' + pad2(ldate.getUTCSeconds());\r\n    } \r\n\r\n    \r\n    return (\r\n       <div> \r\n         {alarms.error.status === true   \r\n            ?<LoadPageError error = {alarms.error} />\r\n            : <div className=\"justify-content-center\">           \r\n                <div className=\"col justify-content-center\">\r\n                    <div className=\"row pb-3\" style={{borderStyle: 'none none solid none', borderWidth: '2px'}}>\r\n                        <h3 className=\"card-title text-center\">ALARMES </h3>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <label className=\"col-2 col-form-label\" style={{width:'160px'}}>Nome:</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext fw-bold\" style={{fontSize:'18px'}} value={nome} disabled></input>\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"row\">\r\n                        <label className=\"col-2 col-form-label\" style={{width:'159px'}}>Última Atualização:</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext\" value={LocalDate()} disabled></input>\r\n                        </div>\r\n                    </div>                 \r\n                                                    \r\n                </div>\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-16\">\r\n                        <table className=\"table table-striped  table-sm table-bordered table-light mt-3\">\r\n                            <thead>\r\n                                <tr>                    \r\n                                    <th scope=\"col\" >Ponto Monitorado</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Teste</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Valor Alarmado</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Valor Alarme</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Sentido</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Alarme</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {alarms.Alarmes.map((alarm, idx) => \r\n                                    alarm.alarmados.map((almds, idj) => {\r\n                                        return  <tr key={alarm.IDPtoMon+'_'+idj}>                       \r\n                                                    <td>{alarm.nomePtoMon}</td>\r\n                                                    <td className=\"text-center\">{almds.nomeTeste}</td>\r\n                                                    <td className=\"text-center\">{(almds.valorAlarmado).toFixed(4)}</td>\r\n                                                    <td className=\"text-center\">{almds.valorAlarme}</td>\r\n                                                    <td className=\"text-center\">{almds.sentido}</td>\r\n                                                    <td className=\"text-center\">{almds.nomeAlarme}</td>\r\n                                                </tr>\r\n                                    })\r\n                                )}                                          \r\n                            </tbody>                    \r\n                        </table>  \r\n                    </div> \r\n                </div>\r\n             </div>\r\n          }  \r\n       </div>   \r\n    )\r\n}\r\n\r\nexport default Alarms","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, Link, useRouteMatch } from \"react-router-dom\";\r\nimport LoadPageError from '../Messages/LoadPageError';\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst MonitoredPoints = ()=>{ \r\n\r\n    const { nome } = useParams();    \r\n    const [monPoints, setMonPoints] = useState({\r\n        \"Sinais\":{\r\n            \"nome\":\"\",\r\n            \"datahora\":\"\",\r\n            \"pontosMonitorados\":[]        \r\n        }, \r\n        \"error\":{\r\n            \"code\":\"\", \r\n            \"source\":\"\", \r\n            \"status\":\"\"\r\n    }});\r\n\r\n    let { url } = useRouteMatch();\r\n    const {refresh, setSpin} = useAutoRefresh() ;\r\n\r\n    const loadMonPoints = async () =>{    \r\n        const res = await axios.get(`JSON/WS_DADOS/${nome}`)\r\n        //console.log('res=', JSON.parse(res.data.body));\r\n        setMonPoints(res.data);\r\n    } \r\n      \r\n    useEffect(() => {\r\n        loadMonPoints()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(refresh===true) {\r\n            const timeoutView = setTimeout(() => {\r\n                loadMonPoints()\r\n               // console.log('Updating points')                  \r\n                const timeOutSpin = setTimeout(() => {setSpin(false)}, 2000);\r\n                setSpin(true); \r\n                return () => clearTimeout(timeOutSpin);   \r\n            }, 5000);\r\n            return () => clearTimeout(timeoutView);   \r\n        } else if(refresh===false){\r\n            setSpin(false)\r\n        }     \r\n     }, [monPoints, refresh, setSpin])  \r\n   \r\n\r\n    const linkRef = (valid, name) => {\r\n        if (valid) {\r\n            return <Link to={`${url}/${name}`} className=\"fw-bold\" style={{textDecoration: 'none'}}>{name}</Link>\r\n        } else {\r\n           return  <div>{name}</div>\r\n        }\r\n    }\r\n\r\n    const isValid = (val)=>{ \r\n        if(val === false){\r\n            return <i className=\"fas fa-times\" style={{color:'red'}}></i>\r\n        }else{\r\n            return <i className=\"fas fa-check\" style={{color:'green'}}></i>;\r\n        }\r\n    }\r\n\r\n    function pad2(number) {\r\n        return (number < 10 ? '0' : '') + number;\r\n    }\r\n\r\n    const LocalDate= () => {\r\n        let ldate = new Date(Date.now());    \r\n      \r\n        return pad2(ldate.getUTCDate()) + '/' + pad2(ldate.getUTCMonth() + 1) + '/' + pad2(ldate.getUTCFullYear()) + ' ' + \r\n               pad2(ldate.getUTCHours() - 3) + ':' + pad2(ldate.getUTCMinutes()) + ':' + pad2(ldate.getUTCSeconds());\r\n    } \r\n\r\n    \r\n\r\n    return (\r\n       <div> \r\n        {\r\n            monPoints?\r\n            (               \r\n                monPoints.error.status === true  \r\n                ? <LoadPageError error = {monPoints.error} />            \r\n                : <div className=\"justify-content-center\">           \r\n                <div className=\"col justify-content-center\">\r\n                    <div className=\"row pb-3\" style={{borderStyle: 'none none solid none', borderWidth: '2px'}}>\r\n                        <h3 className=\"card-title text-center\">PONTOS MONITORADOS</h3>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <label className=\"col-2 col-form-label\" style={{width:'160px'}}>Nome:</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext fw-bold\" style={{fontSize:'18px'}} value={nome} disabled></input>\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"row\">\r\n                        <label className=\"col-2 col-form-label\" style={{width:'159px'}}>Última Atualização:</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext\" value={LocalDate()} disabled></input>\r\n                        </div>\r\n                    </div>                          \r\n                </div>\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-16\">\r\n                        <table className=\"table table-sm table-bordered table-light mt-3\">\r\n                            <thead>\r\n                                <tr>                    \r\n                                    <th scope=\"col\" >Ponto Monitorado</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Valor</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Time Stamp</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Unidade</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Canal</th>\r\n                                    <th scope=\"col\" className=\"text-center\">Valido</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {monPoints.Sinais.pontosMonitorados.map((point, idx) => {\r\n                                    return  <tr key={idx} className={(point.valido)?'table-success':'table-danger'}>  \r\n                                                <td>\r\n                                                    {linkRef(point.valido, point.nome)}\r\n                                                </td>\r\n                                                <td className=\"text-center\" style={{color:(point.valido)?'black':'#a94442'}}>{(point.valor).toFixed(4)}</td>\r\n                                                <td className=\"text-center\" style={{color:(point.valido)?'black':'#a94442'}}>{point.timestamp}</td>\r\n                                                <td className=\"text-center\" style={{color:(point.valido)?'black':'#a94442'}}>{point.unidade}</td>\r\n                                                <td className=\"text-center\" style={{color:(point.valido)?'black':'#a94442'}}>{point.canal}</td>\r\n                                                <td className=\"text-center\">{isValid(point.valido)}</td>\r\n                                            </tr>\r\n                                })}                                          \r\n                            </tbody>                    \r\n                        </table>  \r\n                    </div> \r\n                </div>\r\n                </div>\r\n                \r\n            ):(\r\n                <span>Loading...</span>\r\n            )\r\n        } \r\n       </div>  \r\n    )\r\n}\r\n\r\nexport default MonitoredPoints","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useRouteMatch } from \"react-router-dom\";\r\n//import Plot from 'react-plotly.js';\r\nimport Plotly from 'plotly.js-basic-dist'\r\nimport createPlotlyComponent from 'react-plotly.js/factory'\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst SignalPlot = ()=>{ \r\n\r\n    const { nome } = useParams();  \r\n    const {refresh, setSpin} = useAutoRefresh() ;\r\n\r\n    let { url } = useRouteMatch();\r\n    const urlArr = url.split('/');\r\n    \r\n    const Plot = createPlotlyComponent(Plotly);\r\n    \r\n    //console.log(`ANAQ/WS_SINAL/${urlArr[3]}/${urlArr[4]}`)\r\n   \r\n    const [signal, setSignal] = useState({'sinal':[], 'error':{'code':'', 'source':'', 'status':''}, 'dt':'', 'timestamp':''});\r\n    \r\n    const loadSignal = async () =>{  \r\n        const res = await axios.get(`JSON/WS_SINAL/${urlArr[3]}/${urlArr[4]}`)\r\n        //console.log('res=', JSON.parse(res.data.body));\r\n        setSignal(res.data);\r\n    } \r\n      \r\n    useEffect(() => {\r\n        loadSignal()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(refresh===true) {\r\n            const timeoutView = setTimeout(() => {\r\n                loadSignal()\r\n                console.log('Updating plot')                  \r\n                const timeOutSpin = setTimeout(() => {setSpin(false)}, 2000);\r\n                setSpin(true); \r\n                return () => clearTimeout(timeOutSpin);   \r\n            }, 5000);\r\n            return () => clearTimeout(timeoutView);   \r\n        } else if(refresh===false){\r\n            setSpin(false)\r\n        }     \r\n    }, [signal, refresh, setSpin]) \r\n\r\n\r\n    function pad2(number) {\r\n        return (number < 10 ? '0' : '') + number;\r\n    }\r\n\r\n    const LocalDate= () => {\r\n        let ldate = new Date(Date.now());    \r\n      \r\n        return pad2(ldate.getUTCDate()) + '/' + pad2(ldate.getUTCMonth() + 1) + '/' + pad2(ldate.getUTCFullYear()) + ' ' + \r\n               pad2(ldate.getUTCHours() - 3) + ':' + pad2(ldate.getUTCMinutes()) + ':' + pad2(ldate.getUTCSeconds());\r\n    } \r\n    \r\n\r\n    const getArrX = () => {\r\n        const arrX = [];  \r\n        let ele = 0; \r\n        for (let i = 0; i < signal.sinal.length; i++) {\r\n            arrX.push(ele);\r\n            ele+=signal.dt;\r\n        }\r\n        return arrX;\r\n    }\r\n   // console.log(signal.sinal.length)\r\n   // console.log(arrX)\r\n\r\n    return (\r\n        <div className=\"justify-content-center\">    \r\n            <div className=\"col justify-content-center \">             \r\n                <div className=\"row\">\r\n                    <label className=\"col-2 col-form-label\" style={{width:'160px'}}>Nome:</label>\r\n                    <div className=\"col-10\">\r\n                        <input type=\"text\" readOnly className=\"form-control-plaintext fw-bold\" style={{fontSize:'18px'}} value={urlArr[3]} disabled></input>\r\n                    </div>\r\n                </div> \r\n                <div className=\"row\">\r\n                    <label className=\"col-2 col-form-label\" style={{width:'159px'}}>Última Atualização:</label>\r\n                    <div className=\"col-10\">\r\n                        <input type=\"text\" readOnly className=\"form-control-plaintext\" value={LocalDate()} disabled></input>\r\n                    </div>\r\n                </div>                          \r\n            </div>\r\n\r\n            <Plot\r\n                data={[\r\n                        {\r\n                            x: getArrX(),\r\n                            y: signal.sinal,\r\n                            type: 'scatter',\r\n                            mode: 'lines', //lines+markers\r\n                            marker: {color: '#537bc4'},\r\n                        },                                            \r\n                ]}\r\n                layout={ \r\n                    { \r\n                        width: 1250, \r\n                        height: 550, \r\n                        title: nome,\r\n                        font: {\r\n                            size: 14\r\n                        },\r\n                        xaxis: {                           \r\n                            linecolor: 'black',\r\n                            linewidth: 1,\r\n                            mirror: true,                            \r\n                        },\r\n                        yaxis: {\r\n                            linecolor: 'black',\r\n                            linewidth: 1,\r\n                            mirror: true,                           \r\n                        }\r\n                    }             \r\n                }\r\n            />\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default SignalPlot","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams} from \"react-router-dom\";\r\nimport LoadPageError from '../Messages/LoadPageError'\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst Tests = ()=>{ \r\n    \r\n    const { nome } = useParams(); \r\n    //const [tests, setTests] = useState({\"Testes\":[], \"error\":{\"code\":\"\", \"source\":\"\", \"status\":\"\"}});\r\n    const [tests, setTests] = useState();\r\n    const {refresh, setSpin} = useAutoRefresh() ;\r\n\r\n    const loadTests = async () =>{\r\n        let res = await axios.get(`JSON/WS_TESTES/${nome}`)      \r\n        console.log(res.data);    \r\n        setTests(res.data);\r\n    } \r\n      \r\n    useEffect(() => {\r\n        loadTests()\r\n    }, [])   \r\n\r\n    useEffect(() => {\r\n        if(refresh===true) {\r\n            const timeoutView = setTimeout(() => {\r\n                loadTests()\r\n                console.log('Updating tests')                  \r\n                const timeOutSpin = setTimeout(() => {setSpin(false)}, 2000);\r\n                setSpin(true); \r\n                return () => clearTimeout(timeOutSpin);   \r\n            }, 5000);\r\n            return () => clearTimeout(timeoutView);   \r\n        } else if(refresh===false){\r\n            setSpin(false)\r\n        }     \r\n     }, [tests, refresh, setSpin])  \r\n\r\n    const Sentido = (val)=>{ \r\n        if(val === 0){\r\n            return 'positivo'\r\n        }else if(val === 1) {\r\n            return 'negativo'\r\n        }else{\r\n            return ''\r\n        }\r\n    }\r\n\r\n    function pad2(number) {\r\n        return (number < 10 ? '0' : '') + number;\r\n    }\r\n\r\n    const LocalDate= () => {\r\n        let ldate = new Date(Date.now());    \r\n      \r\n        return pad2(ldate.getUTCDate()) + '/' + pad2(ldate.getUTCMonth() + 1) + '/' + pad2(ldate.getUTCFullYear()) + ' ' + \r\n               pad2(ldate.getUTCHours() - 3) + ':' + pad2(ldate.getUTCMinutes()) + ':' + pad2(ldate.getUTCSeconds());\r\n    } \r\n    \r\n\r\n    return (\r\n        <div> \r\n         {\r\n            tests?(\r\n             \r\n                 tests.error.status === true   \r\n                ? <LoadPageError error = {tests.error} /> \r\n                : <div className=\"justify-content-center\">           \r\n                     <div className=\"col justify-content-center\">\r\n                         <div className=\"row pb-3\" style={{borderStyle: 'none none solid none', borderWidth: '2px'}}>\r\n                             <h3 className=\"card-title text-center\">TESTES</h3>\r\n                         </div>\r\n     \r\n                         <div className=\"row\">\r\n                             <label className=\"col-2 col-form-label\" style={{width:'160px'}}>Nome:</label>\r\n                             <div className=\"col-10\">\r\n                                 <input type=\"text\" readOnly className=\"form-control-plaintext fw-bold\" style={{fontSize:'18px'}} value={nome} disabled></input>\r\n                             </div>\r\n                         </div> \r\n                         <div className=\"row\">\r\n                             <label className=\"col-2 col-form-label\" style={{width:'159px'}}>Última Atualização:</label>\r\n                             <div className=\"col-10\">\r\n                                 <input type=\"text\" readOnly className=\"form-control-plaintext\" value={LocalDate()} disabled></input>\r\n                             </div>\r\n                         </div>                          \r\n                     </div>\r\n     \r\n                     <div className=\"row justify-content-center\">\r\n                         <div className=\"col-16\">\r\n                             <table className=\"table table-sm table-bordered table-light mt-3\">\r\n                                 <thead>\r\n                                     <tr>                    \r\n                                         <th scope=\"col\" >Ponto Monitorado</th>\r\n                                         <th scope=\"col\" className=\"text-center\">Teste</th>\r\n                                         <th scope=\"col\" className=\"text-center\">Valor Alarmado</th>\r\n                                         <th scope=\"col\" className=\"text-center\">Valor Alarme</th>\r\n                                         <th scope=\"col\" className=\"text-center\">Sentido</th>\r\n                                         <th scope=\"col\" className=\"text-center\">Alarme</th>\r\n                                     </tr>\r\n                                 </thead>\r\n                                 <tbody>\r\n                                     {tests.Testes.map((test, idx) => \r\n                                         test.ultimosResultadosTestes.map((ultm, idj) => \r\n                                             //ultm.alarmados.map((alarm, idk) => {  \r\n                                               ultm.alarmados.map(function(alarm, idk) {        \r\n                                                 if(ultm.idTeste && ultm.nomeTeste) {                                                                        \r\n                                                     return <tr key={test.nome+'_'+ultm.idTeste} className={(alarm.id && alarm.nome)?'table-danger':'table'}>  \r\n                                                             <td className={`text-center ${(alarm.id && alarm.nome)?'alert alert-danger':''}`}>{test.nome}</td>\r\n                                                             <td className={`text-center ${(alarm.id && alarm.nome)?'alert alert-danger':''}`}>{ultm.nomeTeste}</td>\r\n                                                             <td className={`text-center ${(alarm.id && alarm.nome)?'alert alert-danger':''}`}>{(ultm.valor).toFixed(4)}</td>\r\n                                                             <td className={`text-center ${(alarm.id && alarm.nome)?'alert alert-danger':''}`}>{(alarm.id && alarm.nome)?alarm.valor:''}</td>\r\n                                                             <td className={`text-center ${(alarm.id && alarm.nome)?'alert alert-danger':''}`}>{Sentido(alarm.sentido)}</td>\r\n                                                             <td className={`text-center ${(alarm.id && alarm.nome)?'alert alert-danger':''}`}>{alarm.nome}</td>\r\n                                                            </tr>\r\n                                                 }\r\n                                             })   \r\n                                     )       \r\n                                     )}                                          \r\n                                 </tbody>                    \r\n                             </table>  \r\n                         </div> \r\n                     </div>\r\n                  </div>\r\n              \r\n            ):(<span>Loading...</span>)\r\n\r\n         } \r\n       </div>      \r\n    )\r\n}\r\n\r\nexport default Tests","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport LoadPageError from '../Messages/LoadPageError'\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst ErrorView = ()=>{ \r\n\r\n    const [error, setError] = useState({'data':[], 'error':{'code':'', 'source':'', 'status':''}});\r\n    const {refresh, setSpin} = useAutoRefresh();\r\n\r\n    const loadError = async () =>{ \r\n       const res = await axios.get(`JSON/WS_ERROS`) ;  \r\n       setError(res.data);\r\n    } \r\n      \r\n    useEffect(() => {\r\n        loadError()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(refresh===true) {\r\n            const timeoutView = setTimeout(() => {\r\n                loadError()\r\n                console.log('Updating Error')                  \r\n                const timeOutSpin = setTimeout(() => {setSpin(false)}, 5000);\r\n                setSpin(true); \r\n                return () => clearTimeout(timeOutSpin);   \r\n            }, 5000);\r\n            return () => clearTimeout(timeoutView);   \r\n        } else if(refresh===false){\r\n            setSpin(false)\r\n        }     \r\n    }, [error, refresh, setSpin])   \r\n\r\n    function dateFormat(date) {\r\n        let ndate = date.replace(',', '.')\r\n        let d = new Date(ndate)    \r\n        return d.toLocaleString(\"en-GB\");\r\n    }\r\n   \r\n    return( \r\n        <div> \r\n          {error.error.status === true   \r\n            ? <LoadPageError error = {error.error} />             \r\n            : <div className=\"row justify-content-center\">\r\n                {error.data.length\r\n                    ? <div className=\"col\">  \r\n                        {error.data.map((err, idx) => {\r\n                            return  <div  key={idx} className=\"border-danger alert alert-danger justify-content-start bg-light pb-0 pt-0 mb-2\">                               \r\n                                        <div className=\"row\" style={{height:'25px'}}>\r\n                                            <label className=\"col-2 col-form-label fw-bold\" >Codigo:</label>\r\n                                            <div className=\"col-10\">\r\n                                                <input type=\"text\" readOnly className=\"form-control-plaintext\" style={{color:'#a94442'}} value={err.codigo} ></input>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"row\" style={{height:'25px'}}>\r\n                                            <label className=\"col-2 col-form-label fw-bold\">Inicio:</label>\r\n                                            <div className=\"col-10\">\r\n                                                <input type=\"text\" readOnly className=\"form-control-plaintext\" style={{color:'#a94442'}} value={dateFormat(err.horaInicio)} disabled></input>\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div className=\"row\" style={{height:'25px'}}>\r\n                                            <label className=\"col-2 col-form-label fw-bold\">Última Ocorrência:</label>\r\n                                            <div className=\"col-10\">\r\n                                                <input type=\"text\" readOnly className=\"form-control-plaintext\" style={{color:'#a94442'}} value={dateFormat(err.horaUltima)} disabled></input>\r\n                                            </div>\r\n                                        </div>                            \r\n                                        <div className=\"row\" style={{height:'25px'}}>\r\n                                            <label className=\"col-2 col-form-label fw-bold\">Total de Tempo:</label>\r\n                                            <div className=\"col-10\">\r\n                                                <input type=\"text\" readOnly className=\"form-control-plaintext\" style={{color:'#a94442'}} value='0d 01:30:50' disabled></input>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"row\">\r\n                                            <label className=\"col-2 col-form-label fw-bold\">Descrição:</label>\r\n                                            <div className=\"col-10\">\r\n                                                <textarea  type=\"text\" readOnly className=\"form-control-plaintext\" style={{color:'#a94442'}} value={err.descricao} disabled></textarea >\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"row\" >\r\n                                            <label className=\"col-2 col-form-label fw-bold\">Stack:</label>\r\n                                            <div className=\"col-10\">\r\n                                                <textarea  type=\"text\" readOnly className=\"form-control-plaintext\" style={{color:'#a94442'}} value={err.stack} disabled></textarea >\r\n                                            </div>\r\n                                        </div> \r\n                                    </div>\r\n                        })} \r\n                      </div>           \r\n                    : <div className ='container'>\r\n                        <div className=\"alert alert-success\" role=\"alert\"> \r\n                            <strong><i className=\"fas fa-check-circle\" style={{marginRight:'6px'}}></i>\r\n                                Sistema sem erros em ocorrência \r\n                            </strong>\r\n                        </div>\r\n                      </div>   \r\n                }\r\n              </div>\r\n         } \r\n        </div>      \r\n    ) \r\n}\r\n\r\nexport default ErrorView","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport LoadPageError from '../Messages/LoadPageError'\r\nimport { useAutoRefresh } from '../../context/AutoRefresh';\r\n\r\nconst StatisticsView = ()=>{ \r\n\r\n    const [stat, setStat] = useState({\r\n        \"data\":{\r\n            \"PacotesEquipamento\": [], \r\n            \"inicio\": \"\",\r\n            \"memoria\": \"\",\r\n            \"temposAnaliseEquipamentos\": [],\r\n            \"temposBlocosPosProcess\": [],\r\n            \"temposBlocosPreProcess\": [],\r\n            \"temposBlocosUADs\": [],\r\n            \"ultimoReinicio\": \"\"\r\n        },   \r\n        \"error\":{\r\n            \"code\":\"\", \r\n            \"source\":\"\", \r\n            \"status\":\"\"\r\n        }\r\n    });\r\n\r\n    const {refresh, setSpin} = useAutoRefresh();\r\n\r\n    const loadStat = async () =>{  \r\n        const res = await axios.get(`JSON/WS_STAT`)       \r\n        //console.log('res=', JSON.parse(res.data.body));\r\n        setStat(JSON.parse(res.data.body));\r\n    } \r\n      \r\n    useEffect(() => {\r\n        loadStat()\r\n    }, [])  \r\n    \r\n    useEffect(() => {\r\n        if(refresh===true) {\r\n            const timeoutView = setTimeout(() => {\r\n                loadStat()\r\n                console.log('Updating Statistics')                  \r\n                const timeOutSpin = setTimeout(() => {setSpin(false)}, 2000);\r\n                setSpin(true); \r\n                return () => clearTimeout(timeOutSpin);   \r\n            }, 5000);\r\n            return () => clearTimeout(timeoutView);   \r\n        } else if(refresh===false){\r\n            setSpin(false)\r\n        }     \r\n    }, [stat, refresh, setSpin]) \r\n\r\n\r\n    function toDdHhMnSs(ms) {\r\n        let mil_num = parseInt(ms); \r\n        let days = Math.floor(mil_num / (3600 * 24 * 1000));\r\n        let hours = Math.floor((mil_num - (days * (3600 * 24 * 1000))) / (3600 * 1000));\r\n        let minutes = Math.floor((mil_num - (days * (3600 * 24 * 1000)) - (hours * 3600 * 1000)) / (60 * 1000));\r\n        let seconds = Math.floor(mil_num - (days * (3600 * 24 * 1000)) - (hours * 3600 * 1000) - (minutes * 60 * 1000))/(1000);\r\n  \r\n        if (hours < 10) {hours = \"0\"+hours;}\r\n        if (minutes < 10) {minutes = \"0\"+minutes;}\r\n        if (seconds < 10) {seconds = \"0\"+seconds;}\r\n        return days+'d '+hours+':'+minutes+':'+seconds;\r\n    }\r\n\r\n    function dateFormat(date) {\r\n        let ndate = date.replace(',', '.')\r\n        let d = new Date(ndate)    \r\n        return d.toLocaleString(\"en-GB\");\r\n    }\r\n\r\n    function operationTime(datei, datef){\r\n        let ndatei = datei.replace(',', '.');\r\n        let ndatef = datef.replace(',', '.');\r\n        ndatei = new Date(ndatei);\r\n        ndatef = new Date(ndatef);\r\n\r\n        let ms = Math.abs(ndatef.getTime() - ndatei.getTime());\r\n        return toDdHhMnSs(ms)\r\n    }\r\n   \r\n    return( \r\n       <div> \r\n         {stat.error.status === true   \r\n           ? <LoadPageError error = {stat.error} />            \r\n           : <div className=\"row justify-content-center\">\r\n                <div className=\"col-16\">\r\n                    <div className=\"row\" style={{height:'25px'}}>\r\n                        <label className=\"col-2 col-form-label fw-bold\" >Inicio:</label>\r\n                        <div className=\"col-10 h-25\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext\" value={dateFormat(stat.data.inicio)} disabled></input>\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"row\" style={{height:'25px'}}>\r\n                        <label className=\"col-2 col-form-label fw-bold\">Ultimo Reinicio:</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext\" value={dateFormat(stat.data.ultimoReinicio)} disabled></input>\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"row\" style={{height:'25px'}}>\r\n                        <label className=\"col-2 col-form-label fw-bold\">Tempo em Operação:</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext\" value={operationTime(stat.data.inicio, stat.data.ultimoReinicio)} disabled></input>\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"row\" style={{height:'25px'}}>\r\n                        <label className=\"col-2 col-form-label fw-bold\">Memória:</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"text\" readOnly className=\"form-control-plaintext\" value={(stat.data.memoria/1024/1024).toFixed(2)  + ' MB'} disabled></input>\r\n                        </div>\r\n                    </div> \r\n                    <table className=\"table table-striped table-sm table-bordered table-light mt-4\">\r\n                        <thead>\r\n                            <tr>                    \r\n                                <th scope=\"col\">Equipamento</th>\r\n                                <th scope=\"col\" className=\"text-center\">Tempo Análise</th>  \r\n                                <th scope=\"col\" className=\"text-center\">Tempo Pre-Processamento</th>                                                 \r\n                                <th scope=\"col\" className=\"text-center\">Tempo Pos-Processamento</th>      \r\n                            </tr>\r\n                        </thead>\r\n                            <tbody>\r\n                                {stat.data.temposAnaliseEquipamentos.map((equip, idx) => {\r\n                                    return  <tr key={idx} className='table table-striped table-sm table-bordered table-light'>                                            \r\n                                                <td >{equip.nome}</td>\r\n                                                <td className=\"text-center\">{equip.tUltimoCiclo} ms</td> \r\n                                                <td className=\"text-center\">{stat.data.temposBlocosPreProcess[idx].tUltimoCiclo} ms</td>                                        \r\n                                                {\r\n                                                    (() => {\r\n                                                            if (stat.data.temposBlocosPosProcess[idx] )\r\n                                                                if (stat.data.temposBlocosPosProcess[idx].nome)\r\n                                                                    return <td className=\"text-center\">\r\n                                                                                {`${stat.data.temposBlocosPosProcess[idx].tUltimoCiclo} + ms`}\r\n                                                                            </td>\r\n                                                                else \r\n                                                                    return <td className=\"text-center\"> </td>\r\n                                                            else\r\n                                                                return <td className=\"text-center\"> </td>   \r\n                                                    })()               \r\n                                                } \r\n                                            </tr>\r\n                                })}                                          \r\n                            </tbody>                    \r\n                    </table>  \r\n                    <table className=\"table table-striped table-sm table-bordered table-light mt-4\">\r\n                        <thead>\r\n                            <tr>                    \r\n                                <th scope=\"col\" style={{width: '50%'}}>UAD</th>\r\n                                <th scope=\"col\" className=\"text-center\" style={{width: '50%'}}>Bloco Pronto</th>                                               \r\n                            </tr>\r\n                        </thead>\r\n                            <tbody>\r\n                                {stat.data.temposBlocosUADs.map((uad, idx) => {\r\n                                    return  <tr key={idx} className='table table-striped table-sm table-bordered table-light'>                                            \r\n                                                <td >{uad.nome}</td>\r\n                                                <td className=\"text-center\">{uad.tUltimoCiclo} ms</td>                                        \r\n                                            </tr>\r\n                                })}                                          \r\n                            </tbody>                    \r\n                    </table> \r\n                    <table className=\"table table-striped table-sm table-bordered table-light mt-4\">\r\n                        <thead>\r\n                            <tr>                    \r\n                                <th scope=\"col\" style={{width: '50%'}}>Processos</th>\r\n                                <th scope=\"col\" className=\"text-center\" style={{width: '50%'}}>Pacotes em Fila</th>                                               \r\n                            </tr>\r\n                        </thead>\r\n                            <tbody>\r\n                                {stat.data.PacotesEquipamento.map((pac, idx) => {\r\n                                    return  <tr key={idx} className='table table-striped table-sm table-bordered table-light'>                                            \r\n                                                <td >{pac.Equipamento}</td>\r\n                                                <td className=\"text-center\">{pac.NumPacotesAnalise}</td>                                        \r\n                                            </tr>\r\n                                })}                                          \r\n                            </tbody>                    \r\n                    </table> \r\n                </div> \r\n             </div> \r\n         } \r\n       </div>    \r\n    ) \r\n}\r\n\r\nexport default StatisticsView","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport LoadPageError from '../Messages/LoadPageError'\r\n\r\nconst VersionView = ()=>{ \r\n\r\n    const [vers, setVers] = useState({\r\n        'data':{\r\n            'CompanyName':'',\r\n            'FileDescription':'',\r\n            'FileVersion':'',\r\n            'InternalName':'',\r\n            'LegalCopyright': '',\r\n            'ProductName':''\r\n        }, \r\n        'error':{'code':'', 'source':'', 'status':''}\r\n    });\r\n\r\n    const loadVers = async () =>{  \r\n        const res = await axios.get(`JSON/WS_VERSAO`)\r\n        setVers(res.data);\r\n    } \r\n      \r\n    useEffect(() => {\r\n        loadVers()\r\n    }, [])  \r\n   \r\n    return( \r\n       <div> \r\n         {vers.error.status === true    \r\n           ? <LoadPageError error = {vers.error} />          \r\n           : <div className=\"col d-flex justify-content-center pt-4\">             \r\n                <div className=\"card\"  style={{width:'31rem'}}>\r\n                    <div className=\"card-header text-center\"><h4>ANAQ</h4></div>\r\n                    <div className=\"card-body\">               \r\n                        <h5 className=\"card-title pb-2\">Aquisição e análise de dados para o Sistema MDM</h5>\r\n                        <div className=\"row\">\r\n                            <label className=\"col-5 col-form-label fw-bold\" >Versão Programa:</label>\r\n                            <div className=\"col-5\">\r\n                                <input type=\"text\" readOnly className=\"form-control-plaintext\"  value={vers.data.FileVersion} disabled></input>\r\n                            </div>\r\n                        </div> \r\n                        <div className=\"row\">\r\n                            <label className=\"col-5 col-form-label fw-bold\">Versão Web Service:</label>\r\n                            <div className=\"col-5\">\r\n                                <input type=\"text\" readOnly className=\"form-control-plaintext\" value='1.3.0180' disabled></input>\r\n                            </div>\r\n                        </div>   \r\n                        <div className=\"row\">\r\n                            <label className=\"col-5 col-form-label fw-bold\" >Nome:</label>\r\n                            <div className=\"col-5\">\r\n                                <input type=\"text\" readOnly className=\"form-control-plaintext\" value='ANAQ Web' disabled></input>\r\n                            </div>\r\n                        </div>                                \r\n                    </div>\r\n                    <div className=\"card-footer text-muted\">\r\n                        <div> {vers.data.CompanyName}</div>\r\n                        <div> {vers.data.LegalCopyright}</div>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n         }\r\n       </div>          \r\n    ) \r\n}\r\n\r\nexport default VersionView","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom'\nimport AnalyseView from './components/Analyse/AnalyseView';\nimport DaqView from './components/DAQ/DaqView';\nimport Navbar from './components/Navbar/Navbar';\nimport Alarms from './components/Analyse/Alarms';\nimport MonitoredPoints from './components/Analyse/MonitoredPoints';\nimport SignalPlot from './components/Analyse/SignalPlot';\nimport Tests from './components/Analyse/Tests';\nimport LogView from './components/Log/LogView';\nimport ErrorView from './components/Error/ErrorView';\nimport StatisticsView from './components/Statistics/StatisticsView';\nimport VersionView from './components/Version/VersionView';\nimport RefreshProvider from './context/AutoRefresh';\n//Bootstrap CSS\n//import 'bootstrap/dist/css/bootstrap.min.css';\n//import 'bootstrap/dist/js/bootstrap.min.js';\n//Fontawesome\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter >   \n     <RefreshProvider>  \n        <div className=\"container pt-4\">\n          <Navbar/>\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/analyses\" />\n            <Route exact path=\"/analyses\" component={AnalyseView}/>\n            <Route exact path=\"/analyses/alarms/:nome\" component={Alarms}/>\n            <Route exact path=\"/analyses/points/:nome\" component={MonitoredPoints}/>\n            <Route exact path=\"/analyses/points/:nome/:nome\" component={SignalPlot}/>\n            <Route exact path=\"/analyses/tests/:nome\" component={Tests}/>\n            <Route exact path=\"/daq\" component={DaqView}/>\n            <Route exact path=\"/log\" component={LogView}/>\n            <Route exact path=\"/error\" component={ErrorView}/>\n            <Route exact path=\"/statistics\" component={StatisticsView}/>\n            <Route exact path=\"/version\" component={VersionView}/>\n          </Switch>\n        </div>   \n      </RefreshProvider>  \n    </HashRouter >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}